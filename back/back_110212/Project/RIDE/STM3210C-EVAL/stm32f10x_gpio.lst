
D:\sunny\stm32\therme\Project\RIDE\STM3210C-EVAL\stm32f10x_gpio.o:     file format elf32-littlearm
D:\sunny\stm32\therme\Project\RIDE\STM3210C-EVAL\stm32f10x_gpio.o


Disassembly of section .text.GPIO_DeInit:

00000000 <GPIO_DeInit>:
GPIO_DeInit():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:112
void GPIO_DeInit(GPIO_TypeDef* GPIOx)
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  
  if (GPIOx == GPIOA)
   0:	4b23      	ldr	r3, [pc, #140]	; (90 <GPIO_DeInit+0x90>)
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:108
  * @brief  Deinitializes the GPIOx peripheral registers to their default reset values.
  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
  * @retval None
  */
void GPIO_DeInit(GPIO_TypeDef* GPIOx)
{
   2:	b510      	push	{r4, lr}
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:112
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  
  if (GPIOx == GPIOA)
   4:	4298      	cmp	r0, r3
   6:	d105      	bne.n	14 <GPIO_DeInit+0x14>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:114
  {
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, ENABLE);
   8:	2004      	movs	r0, #4
   a:	2101      	movs	r1, #1
   c:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:115
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, DISABLE);
  10:	2004      	movs	r0, #4
  12:	e036      	b.n	82 <GPIO_DeInit+0x82>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:117
  }
  else if (GPIOx == GPIOB)
  14:	4b1f      	ldr	r3, [pc, #124]	; (94 <GPIO_DeInit+0x94>)
  16:	4298      	cmp	r0, r3
  18:	d105      	bne.n	26 <GPIO_DeInit+0x26>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:119
  {
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, ENABLE);
  1a:	2008      	movs	r0, #8
  1c:	2101      	movs	r1, #1
  1e:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:120
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, DISABLE);
  22:	2008      	movs	r0, #8
  24:	e02d      	b.n	82 <GPIO_DeInit+0x82>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:122
  }
  else if (GPIOx == GPIOC)
  26:	4b1c      	ldr	r3, [pc, #112]	; (98 <GPIO_DeInit+0x98>)
  28:	4298      	cmp	r0, r3
  2a:	d105      	bne.n	38 <GPIO_DeInit+0x38>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:124
  {
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, ENABLE);
  2c:	2010      	movs	r0, #16
  2e:	2101      	movs	r1, #1
  30:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:125
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, DISABLE);
  34:	2010      	movs	r0, #16
  36:	e024      	b.n	82 <GPIO_DeInit+0x82>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:127
  }
  else if (GPIOx == GPIOD)
  38:	4b18      	ldr	r3, [pc, #96]	; (9c <GPIO_DeInit+0x9c>)
  3a:	4298      	cmp	r0, r3
  3c:	d105      	bne.n	4a <GPIO_DeInit+0x4a>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:129
  {
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, ENABLE);
  3e:	2020      	movs	r0, #32
  40:	2101      	movs	r1, #1
  42:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:130
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, DISABLE);
  46:	2020      	movs	r0, #32
  48:	e01b      	b.n	82 <GPIO_DeInit+0x82>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:132
  }    
  else if (GPIOx == GPIOE)
  4a:	4b15      	ldr	r3, [pc, #84]	; (a0 <GPIO_DeInit+0xa0>)
  4c:	4298      	cmp	r0, r3
  4e:	d105      	bne.n	5c <GPIO_DeInit+0x5c>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:134
  {
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, ENABLE);
  50:	2040      	movs	r0, #64	; 0x40
  52:	2101      	movs	r1, #1
  54:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:135
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, DISABLE);
  58:	2040      	movs	r0, #64	; 0x40
  5a:	e012      	b.n	82 <GPIO_DeInit+0x82>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:137
  } 
  else if (GPIOx == GPIOF)
  5c:	4b11      	ldr	r3, [pc, #68]	; (a4 <GPIO_DeInit+0xa4>)
  5e:	4298      	cmp	r0, r3
  60:	d105      	bne.n	6e <GPIO_DeInit+0x6e>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:139
  {
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, ENABLE);
  62:	2080      	movs	r0, #128	; 0x80
  64:	2101      	movs	r1, #1
  66:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:140
    RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, DISABLE);
  6a:	2080      	movs	r0, #128	; 0x80
  6c:	e009      	b.n	82 <GPIO_DeInit+0x82>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:144
  }
  else
  {
    if (GPIOx == GPIOG)
  6e:	4b0e      	ldr	r3, [pc, #56]	; (a8 <GPIO_DeInit+0xa8>)
  70:	4298      	cmp	r0, r3
  72:	d10b      	bne.n	8c <GPIO_DeInit+0x8c>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:146
    {
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, ENABLE);
  74:	f44f 7080 	mov.w	r0, #256	; 0x100
  78:	2101      	movs	r1, #1
  7a:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:147
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, DISABLE);
  7e:	f44f 7080 	mov.w	r0, #256	; 0x100
  82:	2100      	movs	r1, #0
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:150
    }
  }
}
  84:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:147
  else
  {
    if (GPIOx == GPIOG)
    {
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, ENABLE);
      RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, DISABLE);
  88:	f7ff bffe 	b.w	0 <RCC_APB2PeriphResetCmd>
  8c:	bd10      	pop	{r4, pc}
  8e:	bf00      	nop
  90:	40010800 	.word	0x40010800
  94:	40010c00 	.word	0x40010c00
  98:	40011000 	.word	0x40011000
  9c:	40011400 	.word	0x40011400
  a0:	40011800 	.word	0x40011800
  a4:	40011c00 	.word	0x40011c00
  a8:	40012000 	.word	0x40012000

Disassembly of section .text.GPIO_AFIODeInit:

00000000 <GPIO_AFIODeInit>:
GPIO_AFIODeInit():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:160
  * @param  None
  * @retval None
  */
void GPIO_AFIODeInit(void)
{
  RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, ENABLE);
   0:	2001      	movs	r0, #1
   2:	4601      	mov	r1, r0
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:159
  *   and EXTI configuration) registers to their default reset values.
  * @param  None
  * @retval None
  */
void GPIO_AFIODeInit(void)
{
   4:	b510      	push	{r4, lr}
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:160
  RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, ENABLE);
   6:	f7ff fffe 	bl	0 <RCC_APB2PeriphResetCmd>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:161
  RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, DISABLE);
   a:	2001      	movs	r0, #1
   c:	2100      	movs	r1, #0
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:162
}
   e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:161
  * @retval None
  */
void GPIO_AFIODeInit(void)
{
  RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, ENABLE);
  RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, DISABLE);
  12:	f7ff bffe 	b.w	0 <RCC_APB2PeriphResetCmd>

Disassembly of section .text.GPIO_Init:

00000000 <GPIO_Init>:
GPIO_Init():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:182
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
   0:	78cb      	ldrb	r3, [r1, #3]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:173
  * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that
  *   contains the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
   2:	b5f0      	push	{r4, r5, r6, r7, lr}
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:183
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
  if ((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x10)) != 0x00)
   4:	f013 0f10 	tst.w	r3, #16
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:182
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
   8:	f003 020f 	and.w	r2, r3, #15
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:192
    /* Output mode */
    currentmode |= (uint32_t)GPIO_InitStruct->GPIO_Speed;
  }
/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)0x00FF)) != 0x00)
   c:	880e      	ldrh	r6, [r1, #0]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:188
  if ((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x10)) != 0x00)
  { 
    /* Check the parameters */
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
    /* Output mode */
    currentmode |= (uint32_t)GPIO_InitStruct->GPIO_Speed;
   e:	bf1c      	itt	ne
  10:	788b      	ldrbne	r3, [r1, #2]
  12:	431a      	orrne	r2, r3
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:192
  }
/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)0x00FF)) != 0x00)
  14:	f016 0fff 	tst.w	r6, #255	; 0xff
  18:	d01d      	beq.n	56 <GPIO_Init+0x56>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:194
  {
    tmpreg = GPIOx->CRL;
  1a:	6804      	ldr	r4, [r0, #0]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:195
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
  1c:	2300      	movs	r3, #0
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:197
    {
      pos = ((uint32_t)0x01) << pinpos;
  1e:	2701      	movs	r7, #1
  20:	409f      	lsls	r7, r3
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:199
      /* Get the port pins position */
      currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
  22:	ea07 0506 	and.w	r5, r7, r6
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:200
      if (currentpin == pos)
  26:	42bd      	cmp	r5, r7
  28:	d111      	bne.n	4e <GPIO_Init+0x4e>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:202
      {
        pos = pinpos << 2;
  2a:	009f      	lsls	r7, r3, #2
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:204
        /* Clear the corresponding low control register bits */
        pinmask = ((uint32_t)0x0F) << pos;
  2c:	f04f 0c0f 	mov.w	ip, #15
  30:	fa0c fc07 	lsl.w	ip, ip, r7
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:207
        tmpreg &= ~pinmask;
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
  34:	fa12 f707 	lsls.w	r7, r2, r7
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:205
      if (currentpin == pos)
      {
        pos = pinpos << 2;
        /* Clear the corresponding low control register bits */
        pinmask = ((uint32_t)0x0F) << pos;
        tmpreg &= ~pinmask;
  38:	ea24 040c 	bic.w	r4, r4, ip
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:207
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
  3c:	433c      	orrs	r4, r7
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:209
        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
  3e:	78cf      	ldrb	r7, [r1, #3]
  40:	2f28      	cmp	r7, #40	; 0x28
  42:	d101      	bne.n	48 <GPIO_Init+0x48>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:211
        {
          GPIOx->BRR = (((uint32_t)0x01) << pinpos);
  44:	6145      	str	r5, [r0, #20]
  46:	e002      	b.n	4e <GPIO_Init+0x4e>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:216
        }
        else
        {
          /* Set the corresponding ODR bit */
          if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
  48:	2f48      	cmp	r7, #72	; 0x48
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:218
          {
            GPIOx->BSRR = (((uint32_t)0x01) << pinpos);
  4a:	bf08      	it	eq
  4c:	6105      	streq	r5, [r0, #16]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:195
/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)0x00FF)) != 0x00)
  {
    tmpreg = GPIOx->CRL;
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
  4e:	3301      	adds	r3, #1
  50:	2b08      	cmp	r3, #8
  52:	d1e4      	bne.n	1e <GPIO_Init+0x1e>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:223
            GPIOx->BSRR = (((uint32_t)0x01) << pinpos);
          }
        }
      }
    }
    GPIOx->CRL = tmpreg;
  54:	6004      	str	r4, [r0, #0]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:227
  }
/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
  56:	880e      	ldrh	r6, [r1, #0]
  58:	2eff      	cmp	r6, #255	; 0xff
  5a:	d91f      	bls.n	9c <GPIO_Init+0x9c>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:229
  {
    tmpreg = GPIOx->CRH;
  5c:	6844      	ldr	r4, [r0, #4]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:230
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
  5e:	2300      	movs	r3, #0
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:172
  * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.
  * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that
  *   contains the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
  60:	f103 0508 	add.w	r5, r3, #8
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:232
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
  {
    tmpreg = GPIOx->CRH;
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
    {
      pos = (((uint32_t)0x01) << (pinpos + 0x08));
  64:	2701      	movs	r7, #1
  66:	40af      	lsls	r7, r5
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:234
      /* Get the port pins position */
      currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
  68:	ea07 0506 	and.w	r5, r7, r6
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:235
      if (currentpin == pos)
  6c:	42bd      	cmp	r5, r7
  6e:	d111      	bne.n	94 <GPIO_Init+0x94>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:237
      {
        pos = pinpos << 2;
  70:	009f      	lsls	r7, r3, #2
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:239
        /* Clear the corresponding high control register bits */
        pinmask = ((uint32_t)0x0F) << pos;
  72:	f04f 0c0f 	mov.w	ip, #15
  76:	fa0c fc07 	lsl.w	ip, ip, r7
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:242
        tmpreg &= ~pinmask;
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
  7a:	fa12 f707 	lsls.w	r7, r2, r7
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:240
      if (currentpin == pos)
      {
        pos = pinpos << 2;
        /* Clear the corresponding high control register bits */
        pinmask = ((uint32_t)0x0F) << pos;
        tmpreg &= ~pinmask;
  7e:	ea24 040c 	bic.w	r4, r4, ip
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:242
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
  82:	433c      	orrs	r4, r7
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:244
        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
  84:	78cf      	ldrb	r7, [r1, #3]
  86:	2f28      	cmp	r7, #40	; 0x28
  88:	d101      	bne.n	8e <GPIO_Init+0x8e>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:246
        {
          GPIOx->BRR = (((uint32_t)0x01) << (pinpos + 0x08));
  8a:	6145      	str	r5, [r0, #20]
  8c:	e002      	b.n	94 <GPIO_Init+0x94>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:249
        }
        /* Set the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
  8e:	2f48      	cmp	r7, #72	; 0x48
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:251
        {
          GPIOx->BSRR = (((uint32_t)0x01) << (pinpos + 0x08));
  90:	bf08      	it	eq
  92:	6105      	streq	r5, [r0, #16]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:230
/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
  {
    tmpreg = GPIOx->CRH;
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
  94:	3301      	adds	r3, #1
  96:	2b08      	cmp	r3, #8
  98:	d1e2      	bne.n	60 <GPIO_Init+0x60>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:255
        {
          GPIOx->BSRR = (((uint32_t)0x01) << (pinpos + 0x08));
        }
      }
    }
    GPIOx->CRH = tmpreg;
  9a:	6044      	str	r4, [r0, #4]
  9c:	bdf0      	pop	{r4, r5, r6, r7, pc}

Disassembly of section .text.GPIO_StructInit:

00000000 <GPIO_StructInit>:
GPIO_StructInit():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:268
  * @retval None
  */
void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
{
  /* Reset GPIO init structure parameters values */
  GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
   0:	f04f 33ff 	mov.w	r3, #4294967295
   4:	8003      	strh	r3, [r0, #0]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:269
  GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
   6:	2302      	movs	r3, #2
   8:	7083      	strb	r3, [r0, #2]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:270
  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN_FLOATING;
   a:	18db      	adds	r3, r3, r3
   c:	70c3      	strb	r3, [r0, #3]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:271
}
   e:	4770      	bx	lr

Disassembly of section .text.GPIO_ReadInputDataBit:

00000000 <GPIO_ReadInputDataBit>:
GPIO_ReadInputDataBit():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:288
  
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); 
  
  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
   0:	6883      	ldr	r3, [r0, #8]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:290
  {
    bitstatus = (uint8_t)Bit_SET;
   2:	4219      	tst	r1, r3
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:297
  else
  {
    bitstatus = (uint8_t)Bit_RESET;
  }
  return bitstatus;
}
   4:	bf0c      	ite	eq
   6:	2000      	moveq	r0, #0
   8:	2001      	movne	r0, #1
   a:	4770      	bx	lr

Disassembly of section .text.GPIO_ReadInputData:

00000000 <GPIO_ReadInputData>:
GPIO_ReadInputData():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:309
uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  
  return ((uint16_t)GPIOx->IDR);
   0:	6880      	ldr	r0, [r0, #8]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:310
}
   2:	b280      	uxth	r0, r0
   4:	4770      	bx	lr

Disassembly of section .text.GPIO_ReadOutputDataBit:

00000000 <GPIO_ReadOutputDataBit>:
GPIO_ReadOutputDataBit():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:326
  uint8_t bitstatus = 0x00;
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); 
  
  if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
   0:	68c3      	ldr	r3, [r0, #12]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:328
  {
    bitstatus = (uint8_t)Bit_SET;
   2:	4219      	tst	r1, r3
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:335
  else
  {
    bitstatus = (uint8_t)Bit_RESET;
  }
  return bitstatus;
}
   4:	bf0c      	ite	eq
   6:	2000      	moveq	r0, #0
   8:	2001      	movne	r0, #1
   a:	4770      	bx	lr

Disassembly of section .text.GPIO_ReadOutputData:

00000000 <GPIO_ReadOutputData>:
GPIO_ReadOutputData():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:347
uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
    
  return ((uint16_t)GPIOx->ODR);
   0:	68c0      	ldr	r0, [r0, #12]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:348
}
   2:	b280      	uxth	r0, r0
   4:	4770      	bx	lr

Disassembly of section .text.GPIO_SetBits:

00000000 <GPIO_SetBits>:
GPIO_SetBits():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:363
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  
  GPIOx->BSRR = GPIO_Pin;
   0:	6101      	str	r1, [r0, #16]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:364
}
   2:	4770      	bx	lr

Disassembly of section .text.GPIO_ResetBits:

00000000 <GPIO_ResetBits>:
GPIO_ResetBits():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:379
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  
  GPIOx->BRR = GPIO_Pin;
   0:	6141      	str	r1, [r0, #20]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:380
}
   2:	4770      	bx	lr

Disassembly of section .text.GPIO_WriteBit:

00000000 <GPIO_WriteBit>:
GPIO_WriteBit():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:400
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_BIT_ACTION(BitVal)); 
  
  if (BitVal != Bit_RESET)
   0:	b10a      	cbz	r2, 6 <GPIO_WriteBit+0x6>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:402
  {
    GPIOx->BSRR = GPIO_Pin;
   2:	6101      	str	r1, [r0, #16]
   4:	4770      	bx	lr
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:406
  }
  else
  {
    GPIOx->BRR = GPIO_Pin;
   6:	6141      	str	r1, [r0, #20]
   8:	4770      	bx	lr

Disassembly of section .text.GPIO_Write:

00000000 <GPIO_Write>:
GPIO_Write():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:421
void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
{
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  
  GPIOx->ODR = PortVal;
   0:	60c1      	str	r1, [r0, #12]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:422
}
   2:	4770      	bx	lr

Disassembly of section .text.GPIO_PinLockConfig:

00000000 <GPIO_PinLockConfig>:
GPIO_PinLockConfig():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:439
  
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  
  tmp |= GPIO_Pin;
   0:	f441 3380 	orr.w	r3, r1, #65536	; 0x10000
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:441
  /* Set LCKK bit */
  GPIOx->LCKR = tmp;
   4:	6183      	str	r3, [r0, #24]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:443
  /* Reset LCKK bit */
  GPIOx->LCKR =  GPIO_Pin;
   6:	6181      	str	r1, [r0, #24]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:445
  /* Set LCKK bit */
  GPIOx->LCKR = tmp;
   8:	6183      	str	r3, [r0, #24]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:447
  /* Read LCKK bit*/
  tmp = GPIOx->LCKR;
   a:	6983      	ldr	r3, [r0, #24]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:449
  /* Read LCKK bit*/
  tmp = GPIOx->LCKR;
   c:	6983      	ldr	r3, [r0, #24]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:450
}
   e:	4770      	bx	lr

Disassembly of section .text.GPIO_EventOutputConfig:

00000000 <GPIO_EventOutputConfig>:
GPIO_EventOutputConfig():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:462
  * @param  GPIO_PinSource: specifies the pin for the Event output.
  *   This parameter can be GPIO_PinSourcex where x can be (0..15).
  * @retval None
  */
void GPIO_EventOutputConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)
{
   0:	b510      	push	{r4, lr}
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:468
  uint32_t tmpreg = 0x00;
  /* Check the parameters */
  assert_param(IS_GPIO_EVENTOUT_PORT_SOURCE(GPIO_PortSource));
  assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
    
  tmpreg = AFIO->EVCR;
   2:	4a06      	ldr	r2, [pc, #24]	; (1c <GPIO_EventOutputConfig+0x1c>)
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:470
  /* Clear the PORT[6:4] and PIN[3:0] bits */
  tmpreg &= EVCR_PORTPINCONFIG_MASK;
   4:	f64f 7380 	movw	r3, #65408	; 0xff80
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:468
  uint32_t tmpreg = 0x00;
  /* Check the parameters */
  assert_param(IS_GPIO_EVENTOUT_PORT_SOURCE(GPIO_PortSource));
  assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
    
  tmpreg = AFIO->EVCR;
   8:	6814      	ldr	r4, [r2, #0]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:471
  /* Clear the PORT[6:4] and PIN[3:0] bits */
  tmpreg &= EVCR_PORTPINCONFIG_MASK;
  tmpreg |= (uint32_t)GPIO_PortSource << 0x04;
   a:	ea41 1100 	orr.w	r1, r1, r0, lsl #4
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:470
  assert_param(IS_GPIO_EVENTOUT_PORT_SOURCE(GPIO_PortSource));
  assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
    
  tmpreg = AFIO->EVCR;
  /* Clear the PORT[6:4] and PIN[3:0] bits */
  tmpreg &= EVCR_PORTPINCONFIG_MASK;
   e:	ea04 0303 	and.w	r3, r4, r3
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:472
  tmpreg |= (uint32_t)GPIO_PortSource << 0x04;
  tmpreg |= GPIO_PinSource;
  12:	ea41 0303 	orr.w	r3, r1, r3
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:473
  AFIO->EVCR = tmpreg;
  16:	6013      	str	r3, [r2, #0]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:474
}
  18:	bd10      	pop	{r4, pc}
  1a:	bf00      	nop
  1c:	40010000 	.word	0x40010000

Disassembly of section .text.GPIO_EventOutputCmd:

00000000 <GPIO_EventOutputCmd>:
GPIO_EventOutputCmd():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:487
void GPIO_EventOutputCmd(FunctionalState NewState)
{
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NewState));
  
  *(__IO uint32_t *) EVCR_EVOE_BB = (uint32_t)NewState;
   0:	60184b01 	.word	0x60184b01
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:488
}
   4:	4770      	bx	lr
   6:	bf00      	nop
   8:	4220001c 	.word	0x4220001c

Disassembly of section .text.GPIO_PinRemapConfig:

00000000 <GPIO_PinRemapConfig>:
GPIO_PinRemapConfig():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:531
  * @param  NewState: new state of the port pin remapping.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void GPIO_PinRemapConfig(uint32_t GPIO_Remap, FunctionalState NewState)
{
   0:	b530      	push	{r4, r5, lr}
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:538

  /* Check the parameters */
  assert_param(IS_GPIO_REMAP(GPIO_Remap));
  assert_param(IS_FUNCTIONAL_STATE(NewState));  
  
  tmpreg = AFIO->MAPR;
   2:	4a14      	ldr	r2, [pc, #80]	; (54 <GPIO_PinRemapConfig+0x54>)
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:543

  tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
  tmp = GPIO_Remap & LSB_MASK;

  if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK)) == (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK))
   4:	f400 1540 	and.w	r5, r0, #3145728	; 0x300000
   8:	f5b5 1f40 	cmp.w	r5, #3145728	; 0x300000
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:538

  /* Check the parameters */
  assert_param(IS_GPIO_REMAP(GPIO_Remap));
  assert_param(IS_FUNCTIONAL_STATE(NewState));  
  
  tmpreg = AFIO->MAPR;
   c:	6853      	ldr	r3, [r2, #4]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:541

  tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
  tmp = GPIO_Remap & LSB_MASK;
   e:	b284      	uxth	r4, r0
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:543

  if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK)) == (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK))
  10:	d106      	bne.n	20 <GPIO_PinRemapConfig+0x20>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:546
  {
    tmpreg &= DBGAFR_SWJCFG_MASK;
    AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
  12:	6855      	ldr	r5, [r2, #4]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:545
  tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
  tmp = GPIO_Remap & LSB_MASK;

  if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK)) == (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK))
  {
    tmpreg &= DBGAFR_SWJCFG_MASK;
  14:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:546
    AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
  18:	f025 6570 	bic.w	r5, r5, #251658240	; 0xf000000
  1c:	6055      	str	r5, [r2, #4]
  1e:	e011      	b.n	44 <GPIO_PinRemapConfig+0x44>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:548
  }
  else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
  20:	f410 1f80 	tst.w	r0, #1048576	; 0x100000
  24:	d006      	beq.n	34 <GPIO_PinRemapConfig+0x34>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:540
  assert_param(IS_GPIO_REMAP(GPIO_Remap));
  assert_param(IS_FUNCTIONAL_STATE(NewState));  
  
  tmpreg = AFIO->MAPR;

  tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
  26:	f400 2270 	and.w	r2, r0, #983040	; 0xf0000
  2a:	0c12      	lsrs	r2, r2, #16
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:550
    tmpreg &= DBGAFR_SWJCFG_MASK;
    AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
  }
  else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
  {
    tmp1 = ((uint32_t)0x03) << tmpmask;
  2c:	2503      	movs	r5, #3
  2e:	fa15 f202 	lsls.w	r2, r5, r2
  32:	e003      	b.n	3c <GPIO_PinRemapConfig+0x3c>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:556
    tmpreg &= ~tmp1;
    tmpreg |= ~DBGAFR_SWJCFG_MASK;
  }
  else
  {
    tmpreg &= ~(tmp << ((GPIO_Remap >> 0x15)*0x10));
  34:	0d42      	lsrs	r2, r0, #21
  36:	0112      	lsls	r2, r2, #4
  38:	fa14 f202 	lsls.w	r2, r4, r2
  3c:	ea23 0302 	bic.w	r3, r3, r2
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:557
    tmpreg |= ~DBGAFR_SWJCFG_MASK;
  40:	f043 6370 	orr.w	r3, r3, #251658240	; 0xf000000
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:560
  }

  if (NewState != DISABLE)
  44:	b119      	cbz	r1, 4e <GPIO_PinRemapConfig+0x4e>
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:562
  {
    tmpreg |= (tmp << ((GPIO_Remap >> 0x15)*0x10));
  46:	0d40      	lsrs	r0, r0, #21
  48:	0100      	lsls	r0, r0, #4
  4a:	4084      	lsls	r4, r0
  4c:	4323      	orrs	r3, r4
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:565
  }

  AFIO->MAPR = tmpreg;
  4e:	4a01      	ldr	r2, [pc, #4]	; (54 <GPIO_PinRemapConfig+0x54>)
  50:	6053      	str	r3, [r2, #4]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:566
}
  52:	bd30      	pop	{r4, r5, pc}
  54:	40010000 	.word	0x40010000

Disassembly of section .text.GPIO_EXTILineConfig:

00000000 <GPIO_EXTILineConfig>:
GPIO_EXTILineConfig():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:583
  uint32_t tmp = 0x00;
  /* Check the parameters */
  assert_param(IS_GPIO_EXTI_PORT_SOURCE(GPIO_PortSource));
  assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
  
  tmp = ((uint32_t)0x0F) << (0x04 * (GPIO_PinSource & (uint8_t)0x03));
   0:	0203f001 	.word	0x0203f001
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:577
  * @param  GPIO_PinSource: specifies the EXTI line to be configured.
  *   This parameter can be GPIO_PinSourcex where x can be (0..15).
  * @retval None
  */
void GPIO_EXTILineConfig(uint8_t GPIO_PortSource, uint8_t GPIO_PinSource)
{
   4:	b530      	push	{r4, r5, lr}
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:583
  uint32_t tmp = 0x00;
  /* Check the parameters */
  assert_param(IS_GPIO_EXTI_PORT_SOURCE(GPIO_PortSource));
  assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
  
  tmp = ((uint32_t)0x0F) << (0x04 * (GPIO_PinSource & (uint8_t)0x03));
   6:	0092      	lsls	r2, r2, #2
   8:	240f      	movs	r4, #15
   a:	4094      	lsls	r4, r2
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:585
  AFIO->EXTICR[GPIO_PinSource >> 0x02] &= ~tmp;
  AFIO->EXTICR[GPIO_PinSource >> 0x02] |= (((uint32_t)GPIO_PortSource) << (0x04 * (GPIO_PinSource & (uint8_t)0x03)));
   c:	fa10 f202 	lsls.w	r2, r0, r2
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:584
  /* Check the parameters */
  assert_param(IS_GPIO_EXTI_PORT_SOURCE(GPIO_PortSource));
  assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
  
  tmp = ((uint32_t)0x0F) << (0x04 * (GPIO_PinSource & (uint8_t)0x03));
  AFIO->EXTICR[GPIO_PinSource >> 0x02] &= ~tmp;
  10:	4b07      	ldr	r3, [pc, #28]	; (30 <GPIO_EXTILineConfig+0x30>)
  12:	0889      	lsrs	r1, r1, #2
  14:	3102      	adds	r1, #2
  16:	f853 5021 	ldr.w	r5, [r3, r1, lsl #2]
  1a:	ea25 0404 	bic.w	r4, r5, r4
  1e:	f843 4021 	str.w	r4, [r3, r1, lsl #2]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:585
  AFIO->EXTICR[GPIO_PinSource >> 0x02] |= (((uint32_t)GPIO_PortSource) << (0x04 * (GPIO_PinSource & (uint8_t)0x03)));
  22:	f853 4021 	ldr.w	r4, [r3, r1, lsl #2]
  26:	ea42 0404 	orr.w	r4, r2, r4
  2a:	f843 4021 	str.w	r4, [r3, r1, lsl #2]
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:586
}
  2e:	bd30      	pop	{r4, r5, pc}
  30:	40010000 	.word	0x40010000

Disassembly of section .text.GPIO_ETH_MediaInterfaceConfig:

00000000 <GPIO_ETH_MediaInterfaceConfig>:
GPIO_ETH_MediaInterfaceConfig():
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:602
void GPIO_ETH_MediaInterfaceConfig(uint32_t GPIO_ETH_MediaInterface) 
{ 
  assert_param(IS_GPIO_ETH_MEDIA_INTERFACE(GPIO_ETH_MediaInterface)); 

  /* Configure MII_RMII selection bit */ 
  *(__IO uint32_t *) MAPR_MII_RMII_SEL_BB = GPIO_ETH_MediaInterface; 
   0:	60184b01 	.word	0x60184b01
D:\sunny\stm32\therme\Libraries\STM32F10x_StdPeriph_Driver\src/stm32f10x_gpio.c:603
}
   4:	4770      	bx	lr
   6:	bf00      	nop
   8:	422000dc 	.word	0x422000dc
